// <auto-generated />
using System;
using ChessGPT.PL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChessGPT.PL.Migrations
{
    [DbContext(typeof(ChessGPTEntities))]
    partial class ChessGPTEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChessGPT.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GameBoard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameState")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("GameTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_tblGame_Id");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5e0db1c-85a1-4160-9bb7-4c28db12bf11"),
                            GameBoard = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w",
                            GameName = "First Game",
                            GameState = "o",
                            GameTime = new DateTime(2024, 3, 5, 23, 41, 29, 82, DateTimeKind.Local).AddTicks(5573)
                        },
                        new
                        {
                            Id = new Guid("96349c24-a518-4487-a6ff-a2429ecf2576"),
                            GameBoard = "rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b",
                            GameName = "Second Game",
                            GameState = "o",
                            GameTime = new DateTime(2024, 3, 5, 23, 41, 29, 82, DateTimeKind.Local).AddTicks(5616)
                        },
                        new
                        {
                            Id = new Guid("fcd90fc6-ddf3-44d5-acda-c2c420e0a087"),
                            GameBoard = "4K3/4p3/Bk1p4/b4rP1/2R3p1/P3PP2/P3N3/5r2 w",
                            GameName = "Third Game",
                            GameState = "o",
                            GameTime = new DateTime(2024, 3, 5, 23, 41, 29, 82, DateTimeKind.Local).AddTicks(5617)
                        });
                });

            modelBuilder.Entity("ChessGPT.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComputer")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4882ba82-2809-4f40-848d-5230a1d398de"),
                            FirstName = "Kaiden",
                            IsComputer = false,
                            LastName = "Brunke",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g=",
                            UserName = "700233885"
                        },
                        new
                        {
                            Id = new Guid("93c75571-43c9-4085-8736-e55b02df011b"),
                            FirstName = "Logan",
                            IsComputer = false,
                            LastName = "Vang",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g=",
                            UserName = "500201348"
                        },
                        new
                        {
                            Id = new Guid("1ce9a108-70e3-4c1c-a89c-4731713698a8"),
                            FirstName = "AI",
                            IsComputer = true,
                            LastName = "Robot",
                            Password = "W6ph5Mm5Pz8GgiULbPgzG37mj9g=",
                            UserName = "Robot"
                        });
                });

            modelBuilder.Entity("ChessGPT.PL.Entities.tblUserGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblUserGame_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8692bb05-83dd-4f0d-b2bf-8d1507690109"),
                            Color = "w",
                            GameId = new Guid("d5e0db1c-85a1-4160-9bb7-4c28db12bf11"),
                            UserId = new Guid("4882ba82-2809-4f40-848d-5230a1d398de")
                        },
                        new
                        {
                            Id = new Guid("76cbbef8-1d4b-45dd-a2a1-5b0d593c89a4"),
                            Color = "b",
                            GameId = new Guid("d5e0db1c-85a1-4160-9bb7-4c28db12bf11"),
                            UserId = new Guid("93c75571-43c9-4085-8736-e55b02df011b")
                        },
                        new
                        {
                            Id = new Guid("212476c1-3fa4-4648-9d9c-1cdbb199f59a"),
                            Color = "b",
                            GameId = new Guid("96349c24-a518-4487-a6ff-a2429ecf2576"),
                            UserId = new Guid("4882ba82-2809-4f40-848d-5230a1d398de")
                        },
                        new
                        {
                            Id = new Guid("ad8f6a22-c3d7-41a9-8872-faf17e0415db"),
                            Color = "w",
                            GameId = new Guid("96349c24-a518-4487-a6ff-a2429ecf2576"),
                            UserId = new Guid("93c75571-43c9-4085-8736-e55b02df011b")
                        },
                        new
                        {
                            Id = new Guid("1f3db302-079f-424b-93aa-997b7d1ac96b"),
                            Color = "w",
                            GameId = new Guid("fcd90fc6-ddf3-44d5-acda-c2c420e0a087"),
                            UserId = new Guid("1ce9a108-70e3-4c1c-a89c-4731713698a8")
                        },
                        new
                        {
                            Id = new Guid("c1602f17-23a9-4ef9-9461-c2eb7cd9a912"),
                            Color = "b",
                            GameId = new Guid("fcd90fc6-ddf3-44d5-acda-c2c420e0a087"),
                            UserId = new Guid("4882ba82-2809-4f40-848d-5230a1d398de")
                        });
                });

            modelBuilder.Entity("ChessGPT.PL.Entities.tblUserGame", b =>
                {
                    b.HasOne("ChessGPT.PL.Entities.tblGame", "Game")
                        .WithMany("UserGames")
                        .HasForeignKey("GameId")
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_GameId");

                    b.HasOne("ChessGPT.PL.Entities.tblUser", "User")
                        .WithMany("UserGames")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_UserId");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChessGPT.PL.Entities.tblGame", b =>
                {
                    b.Navigation("UserGames");
                });

            modelBuilder.Entity("ChessGPT.PL.Entities.tblUser", b =>
                {
                    b.Navigation("UserGames");
                });
#pragma warning restore 612, 618
        }
    }
}
